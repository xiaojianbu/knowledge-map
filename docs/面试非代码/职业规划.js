/*
2017/01/14

fe24


1, 工作之后的规划
    1) 规划跳槽, 从第一天起
        规划好自己半年/一年后的状态
        规划好达到那个状态需要做的计划
        不要对公司/老板有盲目的感恩之心，互利双赢才能长久
        要以自己的规划为主
    2) 要设定职业规划, 探索职业方向
        要照顾到自己的喜好, 做喜欢的事情
        要保护好自己的热情(做喜欢的事情, 尽量避免被公司业务污染)
            要符合自己的意义
            公务员的工作有意义，但是你不认同也会做着痛苦
    3) 认清自己的地位
        你做了自己的选择，并不只是运气好
        你只是一个流水线工人
        一个公司相当于一个作坊, 由 前端/后端/设计/产品/测试 合作完成一个东西
            资深工人
            多工种工人
    4) 个人增值的方式
        把某个技术做精, 变成专家级流水工
            坏处就是万一被淘汰就跪了
            还有就是鸡蛋放到一个篮子里面了
            选择的空间也少, 比如 nokia 和 moto 被裁员的员工
            为了避免这个窘况, 大家要做流行性高/通用性强的方向
                ios 安卓
                web 更长青
                编程能力是最重要的，切换语言很简单
                市场如果有需求
        横跨多个领域, 做复合型掏粪工
            比如全栈, 就是典型的复合型掏粪工( node.js )
                掏得越多越好 越快越好
                node 是趋势 前端没理由去接触别的语言
            比如技术和其他领域的结合
                软件 + 医疗
                互联网 +


2, 学习的计划
    合理正确的规划方式
        时间不要贪多, 以自己能接受为前提, 从小到大慢慢提高
            计划太多学不完
            学不完有负罪感
            然后就炸了
            所以要慢慢来，遵循客观规律
            不要妄自菲薄（我自控力差，我做不好事）
        目标要细化, 最好是把事情分解为 20 分钟甚至 10 分钟能解决的程度
            目标大了就会拖，拖了就做不完
            把目标写下来
            一条条做
        要合理看待不能完成的任务, 要有标准化的预案
            比如超过设定的极限时间不能解决就提问
    避免买包出斧心理
        买包就是试图付出 xx 资源来得到 yy 好处（无视客观规律）
        出斧就是情绪驱动，不按照客观规律做事
        不要试图通过去学一些奇怪的东西来提高能力
            我要学 java
            我要学人工智能
            我要学底层（什么是底层？）
        不要被情绪驱动, 要按照计划来做事/学习
            不能说今晚做不出就不睡
            不能说我一定要自己想出来才是我的，该问就问


3, 前端知识点的聚合
    react grunt gulp webpack babel es6 这些都是花哨的名词而已
        都可以通过 阮一峰 的网站来了解
    最重要的还是 js 编程能力
        比如不断地练习写程序来提高
        比如通过阅读《代码大全》这样的经典书籍来提高
        编程能力在不同语言之间是互通的
    其次是 html 和 css 的运用能力
    任何工具都只是帮助你更好更方便地构建网站, 本质还是写网页


4, 其他
    倍速视频
        节约时间
        集中精力
    论坛提问的表格具有很高的价值, 要善加利用
        比提问的智慧简单很多
        是长期实践中归纳总结出来的方法
    怎样选择要读的书(不限于技术书)
        绝大部分书都是垃圾
        即便是好书, 大部分内容很可能也没什么用
        粗读, 不要精读
        绝不要去读原版
        这些是我长期实践的总结，仅供参考
    更多的训练项目
        electron 视频播放器
        天气应用
        计算器
        游戏
        浏览器插件（Gif ZhiHu）
        爬虫
        爬虫结果的图表化数据分析（数据可视化、数据分析）
        小游戏
        markdown 编辑器
        美味便签
    HTTP 协议(主要用在 AJAX 上)
    改键位和快捷键
*/
